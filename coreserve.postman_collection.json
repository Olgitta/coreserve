{
	"info": {
		"_postman_id": "81a728ff-20c0-4054-9598-7e499c3dbdbf",
		"name": "CORESERVE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9282026"
	},
	"item": [
		{
			"name": "posts-api",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response body\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"postId\", response.resources.id);\r",
									"// pm.environment.set(\"postId\", response.resources.id);\r",
									"\r",
									"// Optional: Log to ensure it works\r",
									"// console.log(\"postId saved:\", pm.environment.get(\"postId\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Lorem ipsum dolor sit amet.\",\r\n    \"content\": \"Nunc ut vestibulum libero. Nulla facilisi. Integer quis maximus erat, at malesuada augue. Fusce ultricies mauris eu orci viverra, et dictum orci ultrices. Sed cursus rhoncus elementum. Integer metus arcu, consectetur in viverra ut, ultrices id ipsum. Phasellus venenatis, lectus sit amet imperdiet aliquam, augue dui imperdiet odio, sit amet aliquam lacus purus in nulla.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts?page=2&limit=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"title\": \"Mauris ac rhoncus velit.\",\r\n            \"content\": \"Vestibulum egestas non turpis sit amet condimentum. Cras eget tempus nulla. Duis porta ipsum eu urna imperdiet, in feugiat velit dignissim. Vivamus tempus tortor vel elit elementum dignissim. Etiam non dolor et ante accumsan accumsan nec non velit. Donec in ipsum semper, tempus metus et, eleifend est. Maecenas mi tortor, tincidunt id ultricies eget, dignissim vitae lorem. Aliquam nisi magna, aliquam at odio fringilla, sollicitudin fermentum felis. Donec vehicula vel massa a faucibus. Quisque tincidunt porttitor lorem, id hendrerit ligula consequat et.\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/posts/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/like/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"like",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/unlike/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"unlike",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "comments-api",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response body\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"commentId\", response.resources.id);\r",
									"// pm.environment.set(\"commentId\", response.resources.id);\r",
									"\r",
									"// Optional: Log to ensure it works\r",
									"// console.log(\"commentId saved:\", pm.environment.get(\"commentId\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Nunc at tellus interdum est euismod aliquet a interdum tortor. Aenean in dictum sem. Sed quis risus quis lectus scelerisque mollis.\",\r\n    \"postId\": {{postId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Reply",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Nunc at tellus interdum est euismod aliquet a interdum tortor. Aenean in dictum sem. Sed quis risus quis lectus scelerisque mollis.\",\r\n    \"postId\": {{postId}},\r\n    \"parentId\": {{commentId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments?page=1&limit=5&postId={{postId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "postId",
									"value": "{{postId}}"
								},
								{
									"key": "parentId",
									"value": "{{commentId}}",
									"description": "ommit if its first level",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments/like/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"like",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments/unlike/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"unlike",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "todos-api",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response body",
									"const response = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"todoId\", response.resources.id);",
									"",
									"// pm.environment.set(\"todoId\", response.resources.id);",
									"",
									"// Optional: Log to ensure it works",
									"// console.log(\"todoId saved:\", pm.environment.get(\"todoId\"));",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Lorem ipsum dolor sit amet.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Create todo"
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{todoId}}"
								}
							]
						},
						"description": "Get todo by id"
					},
					"response": []
				},
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos?page=2&limit=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Get todos with pagination"
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"completed\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/todos/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{todoId}}"
								}
							]
						},
						"description": "Update todo"
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{todoId}}"
								}
							]
						},
						"description": "Delete todo"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwtToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const header = {\r",
					"    alg: \"HS256\",\r",
					"    typ: \"JWT\"\r",
					"};\r",
					"\r",
					"const payload = {\r",
					"    userId: 1,\r",
					"    name: \"Test User\",\r",
					"    exp: Math.floor(Date.now() / 1000) + (60 * 60), // Token expires in 1 hour\r",
					"};\r",
					"\r",
					"const jwtSecret = \"your_secret_key\"; // Replace with your actual secret key\r",
					"\r",
					"\r",
					"function base64url(source) {\r",
					"    // Encode in classical base64\r",
					"    encodedSource = CryptoJS.enc.Base64.stringify(source)\r",
					"    \r",
					"    // Remove padding equal characters\r",
					"    encodedSource = encodedSource.replace(/=+$/, '')\r",
					"    \r",
					"    // Replace characters according to base64url specifications\r",
					"    encodedSource = encodedSource.replace(/\\+/g, '-')\r",
					"    encodedSource = encodedSource.replace(/\\//g, '_')\r",
					"    \r",
					"    return encodedSource\r",
					"}\r",
					"\r",
					"\r",
					"// encode header\r",
					"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header))\r",
					"var encodedHeader = base64url(stringifiedHeader)\r",
					"\r",
					"// encode data\r",
					"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(payload))\r",
					"var encodedData = base64url(stringifiedData)\r",
					"\r",
					"// build token\r",
					"var token = `${encodedHeader}.${encodedData}`\r",
					"\r",
					"// sign token\r",
					"var signature = CryptoJS.HmacSHA256(token, jwtSecret)\r",
					"signature = base64url(signature)\r",
					"var signedToken = `${token}.${signature}`\r",
					"\r",
					"pm.collectionVariables.set('jwt_signed', signedToken);\r",
					"\r",
					"pm.environment.set('jwt_signed', signedToken)\r",
					"console.log('Signed and encoded JWT', signedToken)\r",
					"\r",
					"// Save the token as an environment variable\r",
					"pm.collectionVariables.set('jwtToken', signedToken);\r",
					"\r",
					"pm.environment.set(\"jwtToken\", signedToken);\r",
					"\r",
					"// Log the token for debugging\r",
					"console.log(\"Generated JWT Token:\", signedToken);\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"key": "postId",
			"value": ""
		},
		{
			"key": "commentId",
			"value": ""
		},
		{
			"key": "todoId",
			"value": ""
		},
		{
			"key": "jwt_signed",
			"value": ""
		},
		{
			"key": "jwtToken",
			"value": ""
		}
	]
}