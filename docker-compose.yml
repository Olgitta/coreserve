
services:
    coreserve-app:
        image: coreserve
        container_name: coreserve-app
        ports:
            - "5000:5000"
        environment:
            NODE_ENV: production
            PORT: 5000
        depends_on:
            - redis
            - mongodb
            - mysql
#        healthcheck:
#          test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#          interval: 30s    # Check every 30 seconds
#          timeout: 10s     # Timeout for each health check
#          retries: 1       # Number of retries before marking as unhealthy
#          start_period: 5s # Grace period before starting health checks

    mongodb:
        image: mongo:6.0
        container_name: mongodb
        ports:
            - "27017:27017"
        volumes:
            - "mongodb_data:/data/db"
            - "./scripts/mongodb_scripts.js:/docker-entrypoint-initdb.d/init-script.js"

    redis:
        image: redis:7.0
        container_name: redis
        ports:
            - "6379:6379"
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - redis_data:/data

    mysql:
        image: mysql:8.0
        container_name: mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
        volumes:
            - "mysql_data:/var/lib/mysql"
            - "./scripts/mysql_scripts.sql:/docker-entrypoint-initdb.d/init-script.sql"

volumes:
    mongodb_data:
    redis_data:
    mysql_data:
